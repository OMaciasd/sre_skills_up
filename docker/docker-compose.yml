services:
  python-microservice:
    build:
      context: .
      dockerfile: Dockerfile
    image: omaciasd/python-microservice:last
    ports:
      - "5000:5000"
    volumes:
      - ./webapp:/app/webapp
    environment:
      - FLASK_APP=webapp:create_app
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://your_postgres_user:your_postgres_password@postgres:5432/your_postgres_db
    restart: always
    depends_on:
      - prometheus
      - postgres
    networks:
      - docker_default

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - python-microservice
    networks:
      - docker_default

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./Prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - docker_default

  grafana:
    # build:
    #   context: .
    #   dockerfile: Grafana/Dockerfile
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_METRICS_ENABLED=true
      - GF_METRICS_BASIC_AUTH_USERNAME=grafana
      - GF_METRICS_BASIC_AUTH_PASSWORD=grafana
      - GF_PROMETHEUS_ENDPOINT_ENABLED=true
      - GF_PROMETHEUS_ENDPOINT_BASIC_AUTH_USERNAME=grafana
      - GF_PROMETHEUS_ENDPOINT_BASIC_AUTH_PASSWORD=grafana
      - GF_SECURITY_ADMIN_PASSWORD=your_secure_password
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana-provisioning:/etc/grafana/provisioning
      - ./Grafana/prometheus-datasource.json:/etc/grafana/provisioning/datasources/prometheus-datasource.yaml
    networks:
      - docker_default

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: your_postgres_user
      POSTGRES_PASSWORD: your_postgres_password
      POSTGRES_DB: your_postgres_db
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - docker_default

volumes:
  prometheus-data:
  grafana-data:
  postgres-data:

networks:
  docker_default:
    driver: bridge
